class Solution {
  public:
    int largestSubsquare(int N, vector<vector<char>> A) {
       vector<vector<int>> top(N,vector<int>(N,0));

        vector<vector<int>> left(N,vector<int>(N,0));

        for (int i=0;i<N;i++) {

            for (int j=0;j<N;j++) {

                if (A[i][j] == 'X') {

                    if (i!=0)

                        top[i][j] = top[i-1][j]+1;

                    else 

                        top[i][j] = 1;

                }

            }

        }

        

       for (int i=0;i<N;i++) {

            for (int j=0;j<N;j++) {

                if (A[i][j] == 'X') {

                    if (j!=0)

                        left[i][j] = left[i][j-1]+1;

                    else 

                        left[i][j] = 1;

                }

            }

        }

        

        int maxSubSq = 0;

        

        for (int i=0;i<N;i++) {

            for (int j=0;j<N;j++) {

                if (top[i][j] == 0 || left[i][j] == 0)

                    continue;

                

                int currentValue = min(top[i][j],left[i][j]);

                int top1 = i-currentValue +1;

                int left1 = j-currentValue + 1;

                while (currentValue>0) {

                    int top1 = i-currentValue +1;

                    int left1 = j-currentValue + 1;

                    if ((left[top1][j] >= currentValue) && (top[i][left1] >= currentValue)) {

                        maxSubSq = max(maxSubSq,currentValue);

                        break;

                    }

                    currentValue--;

                    

                }

                

            }

        }

        return maxSubSq;
    }
};
