class Solution {
  public:
  void dfs(int i , int k , vector<vector<int>> &adj , vector<int> &vis,bool &a ,int  &node )
  {
      vis[i] = 1;
      node ++;
      if(k!= adj[i].size()){
          a = false;
      }
      for(auto x:adj[i]){
          if(!vis[x])dfs(x,k,adj,vis,a,node);
      }
  }
    int findNumberOfGoodComponent(int V, vector<vector<int>>& adj) {
        // code here
        int ans = 0;
        vector<int> vis(V+1,0);
        for(int i = 1; i<=V; i++){
            if(!vis[i]){
                int node = 0;
                bool a = true;
                dfs(i , adj[i].size() , adj ,vis,a ,node);
                if(a and node - 1== adj[i].size())ans++;
            }
        }
        return ans;
    }
};
