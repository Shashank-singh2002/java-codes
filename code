class Solution {
public:
    bool eatingRate(vector<int>& piles, int h, int mid){
        int sum = 0;
        for(int i=0;i<piles.size();i++){
            sum += ((piles[i]-1)/mid) + 1;
            if(sum > h){
                return false;
            }
        }
        return true;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        int maxi = INT_MIN;
        
        for(int i=0;i<piles.size();i++){
            maxi = max(maxi, piles[i]);
        }
        
        int low = 1;
        int high = maxi;
        int ans = 0;
        while(low<=high){
            int mid = low + (high - low)/2;
            
            if(eatingRate(piles, h, mid)){
                ans = mid;
                high = mid - 1;
            }
            
            else{
                low = mid + 1;
            }
        }
        
        return ans;
    }
};
